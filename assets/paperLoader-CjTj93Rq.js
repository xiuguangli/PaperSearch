(function(){"use strict";self.onmessage=async function(n){const{url:c,batchSize:e=100}=n.data;try{self.postMessage({type:"loading-start"});const s=await fetch(c);if(!s.ok)throw new Error(`HTTP error! Status: ${s.status}`);const r=await s.json();if(!r||!Array.isArray(r.papers))throw new Error("Invalid data format");const o=r.papers,a=o.length;self.postMessage({type:"metadata",totalPapers:a,totalBatches:Math.ceil(a/e)});for(let t=0;t<a;t+=e){const p=o.slice(t,t+e);self.postMessage({type:"batch",batch:p,batchIndex:Math.floor(t/e),startIndex:t,endIndex:Math.min(t+e,a)}),await new Promise(i=>setTimeout(i,10))}self.postMessage({type:"complete",totalPapers:a,paperData:r})}catch(s){self.postMessage({type:"error",error:s.message})}}})();
